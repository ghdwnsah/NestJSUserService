// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}model Client {
  id          String @id @default(uuid())
  name        String
  clientCode  String  @unique
  isPaid      Boolean @default(false)  // 결제 여부 필드 추가
  users       User[]  @relation("Clients")
}model IpDenylist {
  ip     String @id
  reason String
  createdAt DateTime @default(now())
}model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  isValid   Boolean  @default(true)
  ip        String?  // 탈취 감지용 IP 저장
  createdAt DateTime @default(now())
  expiresAt DateTime
}enum Role {
  SuperAdmin
  ClientAdmin
  ClientUser
}

model User {
  id                    String @id
  name                  String @db.VarChar(30)
  email                 String @unique @db.VarChar(60)
  password              String @db.VarChar(60)
  signupVerifyToken     String @db.VarChar(60)
  verified              Boolean @default(false)
  createdAt             DateTime @default(now())
  role                  Role
  refreshTokens         RefreshToken[]
  clientId              String?     // FK
  resetPasswordToken    String?
  resetPasswordExpires  DateTime?
  client                Client?  @relation(fields: [clientId], references: [id], name: "Clients")
}